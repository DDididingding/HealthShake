<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jhgpt.model.dao.TrainerDao">

	<!-- Trainer 목록 가져오기 (Member와 Join) -->
	<select id="selectAllTrainers" resultType="Trainer">
		SELECT M.*, T.provide_part, T.provide_style, T.provide_goal,
		T.trainer_readme, T.trainer_price, T.trainer_rating
		FROM Member M
		JOIN Trainer T ON M.member_code = T.member_code;
	</select>

	<!-- Trainer 정보를 조회한다. (Member와 Join) -->
	<select id="selectOneTrainer" parameterType="int"
		resultType="Trainer">
		SELECT M.*, T.provide_part, T.provide_style, T.provide_goal,
		T.trainer_readme, T.trainer_price, T.trainer_rating
		FROM Member M
		JOIN Trainer T ON M.member_code = T.member_code
		WHERE M.member_code=#{member_code};
	</select>

	<!-- Trainer 등록 -->
	<insert id="insertTrainer" parameterType="Trainer">
		INSERT INTO Trainer (member_code, provide_part, provide_style, provide_goal,
		 trainer_readme, trainer_price)
		VALUES ((SELECT member_code FROM Member WHERE member_id = #{member_id}),
		#{provide_part}, #{provide_style}, #{provide_goal},
		#{trainer_readme}, #{trainer_price});
	</insert>

	<!-- Trainer 삭제 -->
	<delete id="deleteTrainer" parameterType="int">
		DELETE FROM Trainer
		WHERE member_code=#{member_code}
	</delete>

	<!-- Trainer 수정 -->
	<update id="updateTrainer" parameterType="Trainer">
		UPDATE Trainer
		SET provide_part=#{provide_part}, provide_style=#{provide_style},
		provide_goal=#{provide_goal},
		trainer_readme=#{trainer_readme}, trainer_price=#{trainer_price},
		trainer_rating=#{trainer_rating}
		WHERE member_code=#{member_code}
	</update>

	<select id="selectTrainersByprefer" parameterType="User" resultType="Trainer">
        SELECT t.*,m.*
        FROM trainer t
        JOIN member m ON t.member_code = m.member_code
        WHERE
            (
                CASE
                    WHEN #{prefer_part} IS NULL THEN 0
                    WHEN t.provide_part = #{prefer_part} THEN 1
                    ELSE 0
                END
                +
                CASE
                    WHEN #{prefer_gender} IS NULL THEN 0
                    WHEN m.member_gender = #{prefer_gender} THEN 1
                    ELSE 0
                END
                +
                CASE
                    WHEN #{prefer_goal} IS NULL THEN 0
                    WHEN t.provide_goal = #{prefer_goal} THEN 1
                    ELSE 0
                END
            ) > 0
        ORDER BY
            (
                CASE
                    WHEN #{prefer_part} IS NULL THEN 0
                    WHEN t.provide_part = #{prefer_part} THEN 1
                    ELSE 0
                END
                +
                CASE
                    WHEN #{prefer_gender} IS NULL THEN 0
                    WHEN m.member_gender = #{prefer_gender} THEN 1
                    ELSE 0
                END
                +
                CASE
                    WHEN #{prefer_goal} IS NULL THEN 0
                    WHEN t.provide_goal = #{prefer_goal} THEN 1
                    ELSE 0
                END
            ) DESC,
            t.trainer_rating DESC
        LIMIT 5;
    </select>

</mapper>
